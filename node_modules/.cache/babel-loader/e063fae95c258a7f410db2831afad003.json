{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ParcelOS\\\\Desktop\\\\kaifa\\\\parceic\\\\src\\\\page\\\\mpage\\\\indexRouter\\\\pickup.js\";\n// 大货拣货\nimport React from 'react'; // 引入输入框组件     使用ant design mobile的ui库\n\nimport { InputItem } from 'antd-mobile'; // 引入标题导航组件\n\nimport Navs from '../../../componets/nav'; // 引入input组件\n// import Inp from '../../../componets/input'\n// 引入样式文件\n\nimport IndexCss from './css/pickup.module.scss'; // 引入复选框组件\n\nimport { List, Checkbox, Flex } from 'antd-mobile';\n\nclass Pickup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boxAdd: \"\",\n      closeAdd: \"\",\n      weight: \"\",\n      lenghtCM: \"\",\n      widthCM: \"\",\n      tallCM: \"\",\n      checkList: [{\n        name: \"更新模式\",\n        check: true\n      }, {\n        name: '',\n        check: true,\n        special: true\n      }, {\n        name: \"锁定重量\",\n        check: true\n      }, {\n        name: \"锁定尺寸\",\n        check: true\n      }, {\n        name: \"使用客户数据\",\n        check: true\n      }]\n    };\n\n    this.hendleChangeGoaut = v => {\n      // console.log(v.keyCode);\n      // 里面做一层判断  确认用户点击回车键后进此判断\n      if (v.keyCode === 13) {\n        // 里面判断用户是否使用清单号模式   如果使用了清单号模式进入if判断\n        if (this.refs.rvomadd) {\n          // 利用ref查找到清单号的输入框\n          let rvomadd = this.refs.rvomadd; // 为其获取焦点\n\n          rvomadd.focus();\n        } // 如果以上的if条件没有满足证明用户没有使用到清单模式\n        // 则需要直接跳到重量模式\n\n\n        let weight = this.refs.weight; // 并为其重量模式添加focus\n\n        weight.focus();\n      }\n    };\n\n    this.handleRvomAdd = v => {\n      // 里面做出一层判断是否点击了回车键\n      if (v.keyCode === 13) {\n        // 如果点击了回车键则进入if判断\n        let weight = this.refs.weight; // 并未下一个输入框获取焦点\n\n        weight.focus();\n      }\n    };\n\n    this.handleKeyWeight = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框   \n        let length = this.refs.length; // 添加focus事件     自动获取焦点\n\n        length.focus();\n      }\n    };\n\n    this.keyDownLength = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框\n        let width = this.refs.width; // 添加focus事件     自动获取焦点\n\n        width.focus();\n      }\n    };\n\n    this.keyDownWidth = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框\n        let tall = this.refs.tall; // 添加focus事件     自动获取焦点\n\n        tall.focus();\n      }\n    };\n\n    this.keyDownTall = () => {};\n\n    this.handleCheckList = i => {\n      // render函数上面循环了六个check选择模式     所以采取 i 来找到相应的对象\n      // 创建一个变量拿到checkList数组   并未其进行改造\n      let checkList = this.state.checkList;\n\n      if (i === 0) {\n        checkList[1].special = !checkList[i].check;\n        console.log(checkList[1].check);\n      } else if (i === 1) {\n        checkList[1].special = checkList[i].check;\n      } // 通过索引来取到他的值    并为check取反\n\n\n      checkList[i].check = !checkList[i].check; // 把改造过的值赋值回去\n\n      this.setState({\n        checkList\n      });\n    };\n\n    this.clearCloseHorn = () => {\n      // console.log(this.state.checkList[0].check);\n      if (this.state.checkList[1].special) {\n        return React.createElement(\"div\", {\n          className: IndexCss.rvomadd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"\\u6E05\\u5173\\u53F7\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(InputItem, {\n          value: this.state.closeAdd,\n          onChange: v => {\n            this.setState({\n              closeAdd: v\n            });\n          },\n          onKeyDown: this.handleRvomAdd,\n          ref: \"rvomadd\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        })), \" \");\n      } // else if (this.state.checkList[1].check) {\n      //     return <div className={IndexCss.rvomadd}><span>清关号</span><div><InputItem value={this.state.closeAdd} onChange={(v) => {\n      //         this.setState({\n      //             closeAdd: v\n      //         })\n      //     }}\n      //         onKeyDown={this.handleRvomAdd}\n      //         ref=\"rvomadd\"\n      //     />\n      //     </div> </div>\n      // }\n\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Navs, {\n      name: \"\\u62E3\\u8D27\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: IndexCss.inp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: IndexCss.boxAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\u8FD0\\u5355\\u53F7/\\u7BB1\\u53F7\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      autoFocus: \"autofocus\",\n      value: this.state.boxAdd,\n      onChange: v => {\n        this.setState({\n          boxAdd: v\n        });\n      },\n      onKeyDown: this.hendleChangeGoaut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), this.clearCloseHorn(), this.state.checkList[0].check && React.createElement(\"div\", {\n      className: IndexCss.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\u91CD\\u91CF\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      onChange: v => {\n        this.setState({\n          weight: v\n        });\n      },\n      onKeyDown: this.handleKeyWeight,\n      ref: \"weight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })))), this.state.checkList[0].check && React.createElement(\"div\", {\n      className: IndexCss.Divthree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      placeholder: \"\\u957F\",\n      ref: \"length\",\n      onChange: v => {\n        this.setState({\n          lenghtCM: v\n        });\n      },\n      onKeyDown: this.keyDownLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      placeholder: \"\\u5BBD\",\n      ref: \"width\",\n      onChange: v => {\n        this.setState({\n          widthCM: v\n        });\n      },\n      onKeyDown: this.keyDownWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      placeholder: \"\\u9AD8\",\n      ref: \"tall\",\n      onChange: v => {\n        this.setState({\n          tallCM: v\n        });\n      },\n      onKeyDown: this.keyDownTall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), this.state.checkList.map((v, i) => {\n      this.state.checkList[1].name = `${this.state.checkList[0].check ? '不使用清关号' : '更新请关号'}`;\n      return React.createElement(\"div\", {\n        key: i,\n        className: IndexCss.checkMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: () => (i => {\n          this.handleCheckList(i);\n        })(i),\n        checked: !v.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, v.name));\n    })));\n  }\n\n}\n\nexport default Pickup;","map":{"version":3,"sources":["C:/Users/ParcelOS/Desktop/kaifa/parceic/src/page/mpage/indexRouter/pickup.js"],"names":["React","InputItem","Navs","IndexCss","List","Checkbox","Flex","Pickup","Component","state","boxAdd","closeAdd","weight","lenghtCM","widthCM","tallCM","checkList","name","check","special","hendleChangeGoaut","v","keyCode","refs","rvomadd","focus","handleRvomAdd","handleKeyWeight","length","keyDownLength","width","keyDownWidth","tall","keyDownTall","handleCheckList","i","console","log","setState","clearCloseHorn","render","inp","update","Divthree","map","checkMap"],"mappings":"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","sourcesContent":["// 大货拣货\r\n\r\nimport React from 'react'\r\n\r\n// 引入输入框组件     使用ant design mobile的ui库\r\nimport { InputItem } from 'antd-mobile';\r\n\r\n// 引入标题导航组件\r\nimport Navs from '../../../componets/nav'\r\n// 引入input组件\r\n// import Inp from '../../../componets/input'\r\n// 引入样式文件\r\nimport IndexCss from './css/pickup.module.scss'\r\n\r\n// 引入复选框组件\r\nimport { List, Checkbox, Flex } from 'antd-mobile';\r\n\r\nclass Pickup extends React.Component {\r\n    state = {\r\n        boxAdd: \"\",\r\n        closeAdd: \"\",\r\n        weight: \"\",\r\n        lenghtCM: \"\",\r\n        widthCM: \"\",\r\n        tallCM: \"\",\r\n        checkList: [\r\n            {\r\n                name: \"更新模式\",\r\n                check: true\r\n            }, {\r\n                name: '',\r\n                check: true,\r\n                special:true\r\n            }, {\r\n                name: \"锁定重量\",\r\n                check: true\r\n            }, {\r\n                name: \"锁定尺寸\",\r\n                check: true\r\n            }, {\r\n                name: \"使用客户数据\",\r\n                check: true\r\n            }\r\n        ]\r\n    }\r\n    // -------------------------------------------------------------------\r\n\r\n    // 点击在输入框在运单号的时候触发此函数\r\n    hendleChangeGoaut = (v) => {\r\n        // console.log(v.keyCode);\r\n        // 里面做一层判断  确认用户点击回车键后进此判断\r\n        if (v.keyCode === 13) {\r\n            // 里面判断用户是否使用清单号模式   如果使用了清单号模式进入if判断\r\n            if (this.refs.rvomadd) {\r\n                // 利用ref查找到清单号的输入框\r\n                let rvomadd = this.refs.rvomadd\r\n                // 为其获取焦点\r\n                rvomadd.focus()\r\n            }\r\n            // 如果以上的if条件没有满足证明用户没有使用到清单模式\r\n            // 则需要直接跳到重量模式\r\n            let weight = this.refs.weight\r\n            // 并为其重量模式添加focus\r\n            weight.focus()\r\n        }\r\n\r\n    }\r\n\r\n    // 下面是清单输入框的键盘点击事件\r\n    handleRvomAdd = (v) => {\r\n        // 里面做出一层判断是否点击了回车键\r\n        if (v.keyCode === 13) {\r\n            // 如果点击了回车键则进入if判断\r\n            let weight = this.refs.weight\r\n            // 并未下一个输入框获取焦点\r\n            weight.focus()\r\n        }\r\n    }\r\n\r\n    // 下面是重量输入框的键盘事件函数\r\n    handleKeyWeight = (v) => {\r\n\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框   \r\n            let length = this.refs.length\r\n            // 添加focus事件     自动获取焦点\r\n            length.focus()\r\n        }\r\n    }\r\n\r\n    // 下面是长输入框的键盘事件函数\r\n    keyDownLength = (v) => {\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框\r\n            let width = this.refs.width\r\n            // 添加focus事件     自动获取焦点\r\n            width.focus()\r\n        }\r\n    }\r\n\r\n    // 下面是宽输入框的键盘事件函数\r\n    keyDownWidth = (v) => {\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框\r\n            let tall = this.refs.tall\r\n            // 添加focus事件     自动获取焦点\r\n            tall.focus()\r\n        }\r\n    }\r\n\r\n    keyDownTall = () => {\r\n\r\n    }\r\n\r\n\r\n    // 点击handleCheckList触发的函数\r\n    handleCheckList = (i) => {\r\n        // render函数上面循环了六个check选择模式     所以采取 i 来找到相应的对象\r\n\r\n        // 创建一个变量拿到checkList数组   并未其进行改造\r\n        let checkList = this.state.checkList\r\n        if(i===0){\r\n            checkList[1].special = !checkList[i].check\r\n            console.log(checkList[1].check);\r\n            \r\n        }else if(i===1){\r\n            checkList[1].special = checkList[i].check\r\n        }\r\n        // 通过索引来取到他的值    并为check取反\r\n        checkList[i].check = !checkList[i].check\r\n        \r\n\r\n        // 把改造过的值赋值回去\r\n        this.setState({\r\n            checkList\r\n        })\r\n\r\n\r\n    }\r\n    clearCloseHorn = () => {\r\n        // console.log(this.state.checkList[0].check);\r\n\r\n        if (this.state.checkList[1].special) {\r\n            return <div className={IndexCss.rvomadd}><span>清关号</span><div><InputItem value={this.state.closeAdd} onChange={(v) => {\r\n                this.setState({\r\n                    closeAdd: v\r\n                })\r\n            }}\r\n                onKeyDown={this.handleRvomAdd}\r\n                ref=\"rvomadd\"\r\n            />\r\n            </div> </div>\r\n        } \r\n        \r\n        // else if (this.state.checkList[1].check) {\r\n        //     return <div className={IndexCss.rvomadd}><span>清关号</span><div><InputItem value={this.state.closeAdd} onChange={(v) => {\r\n        //         this.setState({\r\n        //             closeAdd: v\r\n        //         })\r\n        //     }}\r\n        //         onKeyDown={this.handleRvomAdd}\r\n        //         ref=\"rvomadd\"\r\n        //     />\r\n        //     </div> </div>\r\n        // }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Navs name=\"拣货\" />\r\n                <div className={IndexCss.inp}>\r\n                    <div className={IndexCss.boxAdd}>\r\n                        <span>运单号/箱号</span><div><InputItem autoFocus=\"autofocus\" value={this.state.boxAdd} onChange={(v) => {\r\n                            this.setState({\r\n                                boxAdd: v\r\n                            })\r\n                        }} onKeyDown={this.hendleChangeGoaut} /></div>\r\n                    </div>\r\n                    {this.clearCloseHorn()}\r\n                    {this.state.checkList[0].check &&\r\n                        <div className={IndexCss.update}>\r\n                            <div>\r\n                                <span>重量</span><div>\r\n                                    <InputItem onChange={(v) => {\r\n                                        this.setState({\r\n                                            weight: v\r\n                                        })\r\n                                    }}\r\n                                        onKeyDown={this.handleKeyWeight}\r\n                                        ref=\"weight\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {this.state.checkList[0].check && <div className={IndexCss.Divthree}>\r\n                        <div className={IndexCss.length}><InputItem placeholder=\"长\" ref=\"length\" onChange={(v) => {\r\n                            this.setState({\r\n                                lenghtCM: v\r\n                            })\r\n                        }}\r\n                            onKeyDown={this.keyDownLength}\r\n                        /></div>\r\n                        <div className={IndexCss.length}><InputItem placeholder=\"宽\" ref=\"width\" onChange={(v) => {\r\n                            this.setState({\r\n                                widthCM: v\r\n                            })\r\n                        }}\r\n                            onKeyDown={this.keyDownWidth}\r\n                        /></div>\r\n                        <div className={IndexCss.length}><InputItem placeholder=\"高\" ref=\"tall\" onChange={(v) => {\r\n                            this.setState({\r\n                                tallCM: v\r\n                            })\r\n                        }}\r\n                            onKeyDown={this.keyDownTall}\r\n                        /></div>\r\n                    </div>}\r\n                    {this.state.checkList.map((v, i) => {\r\n                        this.state.checkList[1].name = `${this.state.checkList[0].check ? '不使用清关号' : '更新请关号'}`\r\n                        return <div key={i} className={IndexCss.checkMap}>\r\n                            <Checkbox onChange={() => ((i) => {\r\n                                this.handleCheckList(i)\r\n                            })(i)}\r\n                            checked={!v.check}\r\n                            >\r\n                                {v.name}\r\n                            </Checkbox>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pickup;"]},"metadata":{},"sourceType":"module"}