{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ParcelOS\\\\Desktop\\\\kaifa\\\\parceic\\\\src\\\\page\\\\mpage\\\\indexRouter\\\\pickup.js\";\n// 大货拣货\nimport React from 'react'; // 引入输入框组件     使用ant design mobile的ui库\n\nimport { InputItem } from 'antd-mobile'; // 引入标题导航组件\n\nimport Navs from '../../../componets/nav'; // 引入input组件\n// import Inp from '../../../componets/input'\n// 引入样式文件\n\nimport IndexCss from './css/pickup.module.scss'; // 引入复选框组件\n\nimport { List, Checkbox, Flex } from 'antd-mobile';\n\nclass Pickup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boxAdd: \"\",\n      closeAdd: \"\",\n      weight: \"\",\n      lenghtCM: \"\",\n      widthCM: \"\",\n      tallCM: \"\",\n      special: true,\n      checkList: [{\n        name: \"更新模式\",\n        check: true\n      }, {\n        name: '',\n        check: true\n      }, {\n        name: \"锁定重量\",\n        check: true\n      }, {\n        name: \"锁定尺寸\",\n        check: true\n      }, {\n        name: \"使用客户数据\",\n        check: true\n      }],\n      forbidden: true,\n      forbiddenCWG: true\n    };\n\n    this.hendleChangeGoaut = v => {\n      // console.log(v.keyCode);\n      // 里面做一层判断  确认用户点击回车键后进此判断\n      if (v.keyCode === 13) {\n        // 里面判断用户是否使用清单号模式   如果使用了清单号模式进入if判断\n        // console.log(this.refs.rvomadd);\n        if (this.refs.rvomadd) {\n          // 利用ref查找到清单号的输入框\n          let rvomadd = this.refs.rvomadd; // 为其获取焦点\n\n          rvomadd.focus();\n        } else if (this.refs.weight) {\n          // 如果以上的if条件没有满足证明用户没有使用到清单模式\n          // 则需要直接跳到重量模式\n          this.handleKeyWeight();\n        }\n      }\n    };\n\n    this.handleRvomAdd = v => {\n      // 里面做出一层判断是否点击了回车键\n      if (v.keyCode === 13) {\n        let {\n          forbidden,\n          forbiddenCWG\n        } = this.state; // console.log(forbiddenCWG);\n        // console.log(forbidden);\n\n        if (forbiddenCWG === false && forbidden === false) {\n          this.keyDownTall();\n        } else if (forbidden === false) {\n          this.handleKeyWeight(v);\n        } else {\n          // 如果点击了回车键则进入if判断\n          let weight = this.refs.weight; // 并未下一个输入框获取焦点\n\n          weight.focus();\n        }\n      }\n    };\n\n    this.handleKeyWeight = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        let {\n          forbidden,\n          forbiddenCWG\n        } = this.state; // console.log(forbiddenCWG);\n\n        if (forbiddenCWG === false) {\n          this.keyDownTall();\n        } else {\n          // 通过ref 找点下一个input输入框   \n          let length = this.refs.length; // 添加focus事件     自动获取焦点\n\n          length.focus();\n        }\n      }\n    };\n\n    this.keyDownLength = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框\n        let width = this.refs.width; // 添加focus事件     自动获取焦点\n\n        width.focus();\n      }\n    };\n\n    this.keyDownWidth = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框\n        let tall = this.refs.tall; // 添加focus事件     自动获取焦点\n\n        tall.focus();\n      }\n    };\n\n    this.keyDownTall = () => {\n      console.log(1);\n    };\n\n    this.handleCheckList = i => {\n      // render函数上面循环了六个check选择模式     所以采取 i 来找到相应的对象\n      // 创建一个变量拿到checkList数组   并未其进行改造\n      let {\n        checkList,\n        special,\n        forbidden,\n        forbiddenCWG\n      } = this.state; // 通过索引来取到他的值    并为check取反\n\n      checkList[i].check = !checkList[i].check; // 由于业务原因  当用户点击了更新模式以及 以及不使用关清号都进入此if判断\n\n      if (i === 0 || i === 1) {\n        // 由于业务原因  更新模式以及 清关号模式都可以直接操作 清关号的input标签   所以清关号的显示以及隐藏都取决于此两个状态\n        special = checkList[i].check;\n      } // 当更新号模式选中状态  则需要将清关号模式重置  所以做了以下的if判断\n\n\n      if (i === 0) {\n        checkList[1].check = true;\n      } // 由于清关号有两个模式   所以做了一下判断\n\n\n      if (i === 1 && checkList[1].name === \"更新请关号\") {\n        special = !checkList[i].check;\n      } // 判断用户是否点击锁定重量\n\n\n      if (i === 2) {\n        forbidden = checkList[i].check; // 用户点击锁定重量  就要找到重量的 input标签  把它禁用掉\n      }\n\n      if (i === 3) {\n        forbiddenCWG = checkList[i].check;\n      }\n\n      if (i === 4) {\n        forbidden = checkList[i].check;\n        forbiddenCWG = checkList[i].check;\n        checkList[2].check = true;\n        checkList[3].check = true;\n      } // 把改造过的值赋值回去\n\n\n      this.setState({\n        checkList,\n        special,\n        forbidden,\n        forbiddenCWG\n      });\n    };\n  }\n\n  // 文本输入框禁用 editable={false}\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Navs, {\n      name: \"\\u62E3\\u8D27\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: IndexCss.inp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: IndexCss.boxAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"\\u8FD0\\u5355\\u53F7/\\u7BB1\\u53F7\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      autoFocus: \"autofocus\",\n      value: this.state.boxAdd,\n      onChange: v => {\n        this.setState({\n          boxAdd: v\n        });\n      },\n      onKeyDown: this.hendleChangeGoaut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), this.state.special && React.createElement(\"div\", {\n      className: IndexCss.rvomadd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"\\u6E05\\u5173\\u53F7\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      value: this.state.closeAdd,\n      onChange: v => {\n        this.setState({\n          closeAdd: v\n        });\n      },\n      onKeyDown: this.handleRvomAdd,\n      ref: \"rvomadd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), \" \"), this.state.checkList[0].check && React.createElement(\"div\", {\n      className: IndexCss.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.state.forbidden === false ? IndexCss.input : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"\\u91CD\\u91CF\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      className: this.state.forbidden === false ? IndexCss.input : '',\n      onChange: v => {\n        this.setState({\n          weight: v\n        });\n      },\n      editable: this.state.forbidden,\n      onKeyDown: this.handleKeyWeight,\n      ref: \"weight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })))), this.state.checkList[0].check && React.createElement(\"div\", {\n      className: IndexCss.Divthree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      className: this.state.forbiddenCWG === false ? IndexCss.input : '',\n      type: \"digit\",\n      placeholder: \"\\u957F\",\n      ref: \"length\",\n      onChange: v => {\n        this.setState({\n          lenghtCM: v\n        });\n      },\n      editable: this.state.forbiddenCWG,\n      onKeyDown: this.keyDownLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      className: this.state.forbiddenCWG === false ? IndexCss.input : '',\n      placeholder: \"\\u5BBD\",\n      ref: \"width\",\n      onChange: v => {\n        this.setState({\n          widthCM: v\n        });\n      },\n      editable: this.state.forbiddenCWG,\n      onKeyDown: this.keyDownWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      className: this.state.forbiddenCWG === false ? IndexCss.input : '',\n      placeholder: \"\\u9AD8\",\n      ref: \"tall\",\n      onChange: v => {\n        this.setState({\n          tallCM: v\n        });\n      },\n      editable: this.state.forbiddenCWG,\n      onKeyDown: this.keyDownTall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))), this.state.checkList.map((v, i) => {\n      this.state.checkList[1].name = `${this.state.checkList[0].check ? '不使用清关号' : '更新请关号'}`;\n      return React.createElement(\"div\", {\n        key: i,\n        className: IndexCss.checkMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: () => (i => {\n          this.handleCheckList(i);\n        })(i),\n        checked: !v.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, v.name));\n    })));\n  }\n\n}\n\nexport default Pickup;","map":{"version":3,"sources":["C:/Users/ParcelOS/Desktop/kaifa/parceic/src/page/mpage/indexRouter/pickup.js"],"names":["React","InputItem","Navs","IndexCss","List","Checkbox","Flex","Pickup","Component","state","boxAdd","closeAdd","weight","lenghtCM","widthCM","tallCM","special","checkList","name","check","forbidden","forbiddenCWG","hendleChangeGoaut","v","keyCode","refs","rvomadd","focus","handleKeyWeight","handleRvomAdd","keyDownTall","length","keyDownLength","width","keyDownWidth","tall","console","log","handleCheckList","i","setState","render","inp","update","input","Divthree","map","checkMap"],"mappings":"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","sourcesContent":["// 大货拣货\r\n\r\nimport React from 'react'\r\n\r\n// 引入输入框组件     使用ant design mobile的ui库\r\nimport { InputItem } from 'antd-mobile';\r\n\r\n// 引入标题导航组件\r\nimport Navs from '../../../componets/nav'\r\n// 引入input组件\r\n// import Inp from '../../../componets/input'\r\n// 引入样式文件\r\nimport IndexCss from './css/pickup.module.scss'\r\n\r\n// 引入复选框组件\r\nimport { List, Checkbox, Flex } from 'antd-mobile';\r\n\r\nclass Pickup extends React.Component {\r\n    state = {\r\n        boxAdd: \"\",\r\n        closeAdd: \"\",\r\n        weight: \"\",\r\n        lenghtCM: \"\",\r\n        widthCM: \"\",\r\n        tallCM: \"\",\r\n        special: true,\r\n        checkList: [\r\n            {\r\n                name: \"更新模式\",\r\n                check: true\r\n            }, {\r\n                name: '',\r\n                check: true\r\n            }, {\r\n                name: \"锁定重量\",\r\n                check: true\r\n            }, {\r\n                name: \"锁定尺寸\",\r\n                check: true\r\n            }, {\r\n                name: \"使用客户数据\",\r\n                check: true\r\n            }\r\n        ],\r\n        forbidden: true,\r\n        forbiddenCWG: true\r\n    }\r\n    // -------------------------------------------------------------------\r\n    // 点击在输入框在运单号的时候触发此函数\r\n    hendleChangeGoaut = (v) => {\r\n        // console.log(v.keyCode);\r\n        // 里面做一层判断  确认用户点击回车键后进此判断\r\n        if (v.keyCode === 13) {\r\n            // 里面判断用户是否使用清单号模式   如果使用了清单号模式进入if判断\r\n            // console.log(this.refs.rvomadd);\r\n            if (this.refs.rvomadd) {\r\n                // 利用ref查找到清单号的输入框\r\n                let rvomadd = this.refs.rvomadd\r\n                // 为其获取焦点\r\n                rvomadd.focus()\r\n            } else if (this.refs.weight) {\r\n                // 如果以上的if条件没有满足证明用户没有使用到清单模式\r\n                // 则需要直接跳到重量模式\r\n                this.handleKeyWeight()\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // 下面是清单输入框的键盘点击事件\r\n    handleRvomAdd = (v) => {\r\n        // 里面做出一层判断是否点击了回车键\r\n        if (v.keyCode === 13) {\r\n            let { forbidden, forbiddenCWG } = this.state\r\n            // console.log(forbiddenCWG);\r\n            // console.log(forbidden);\r\n            \r\n            if (forbiddenCWG === false && forbidden === false) {\r\n                this.keyDownTall()\r\n            } else if(forbidden === false){\r\n                this.handleKeyWeight(v)\r\n            } else {\r\n                // 如果点击了回车键则进入if判断\r\n                let weight = this.refs.weight\r\n                // 并未下一个输入框获取焦点\r\n                weight.focus()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // 下面是重量输入框的键盘事件函数\r\n    handleKeyWeight = (v) => {\r\n\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            let { forbidden, forbiddenCWG } = this.state\r\n            // console.log(forbiddenCWG);\r\n            if (forbiddenCWG === false) {\r\n                this.keyDownTall()\r\n            } else {\r\n                // 通过ref 找点下一个input输入框   \r\n                let length = this.refs.length\r\n                // 添加focus事件     自动获取焦点\r\n                length.focus()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 下面是长输入框的键盘事件函数\r\n    keyDownLength = (v) => {\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框\r\n            let width = this.refs.width\r\n            // 添加focus事件     自动获取焦点\r\n            width.focus()\r\n        }\r\n    }\r\n\r\n    // 下面是宽输入框的键盘事件函数\r\n    keyDownWidth = (v) => {\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框\r\n            let tall = this.refs.tall\r\n            // 添加focus事件     自动获取焦点\r\n            tall.focus()\r\n        }\r\n    }\r\n\r\n    keyDownTall = () => {\r\n        console.log(1);\r\n\r\n    }\r\n\r\n\r\n    // 点击handleCheckList 整一个数组的事件触发的函数\r\n    handleCheckList = (i) => {\r\n        // render函数上面循环了六个check选择模式     所以采取 i 来找到相应的对象\r\n        // 创建一个变量拿到checkList数组   并未其进行改造\r\n        let { checkList, special, forbidden, forbiddenCWG } = this.state\r\n        // 通过索引来取到他的值    并为check取反\r\n        checkList[i].check = !checkList[i].check\r\n\r\n        // 由于业务原因  当用户点击了更新模式以及 以及不使用关清号都进入此if判断\r\n        if (i === 0 || i === 1) {\r\n            // 由于业务原因  更新模式以及 清关号模式都可以直接操作 清关号的input标签   所以清关号的显示以及隐藏都取决于此两个状态\r\n            special = checkList[i].check\r\n        }\r\n\r\n        // 当更新号模式选中状态  则需要将清关号模式重置  所以做了以下的if判断\r\n        if (i === 0) {\r\n            checkList[1].check = true\r\n        }\r\n        // 由于清关号有两个模式   所以做了一下判断\r\n        if (i === 1 && checkList[1].name === \"更新请关号\") {\r\n            special = !checkList[i].check\r\n        }\r\n        // 判断用户是否点击锁定重量\r\n        if (i === 2) {\r\n            forbidden = checkList[i].check\r\n            // 用户点击锁定重量  就要找到重量的 input标签  把它禁用掉\r\n        }\r\n\r\n        if (i === 3) {\r\n            forbiddenCWG = checkList[i].check\r\n        }\r\n\r\n        if (i === 4) {\r\n            forbidden = checkList[i].check\r\n            forbiddenCWG = checkList[i].check\r\n            checkList[2].check = true\r\n            checkList[3].check = true\r\n        }\r\n        // 把改造过的值赋值回去\r\n        this.setState({\r\n            checkList,\r\n            special,\r\n            forbidden,\r\n            forbiddenCWG,\r\n        })\r\n\r\n\r\n    }\r\n    // 文本输入框禁用 editable={false}\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Navs name=\"拣货\" />\r\n                <div className={IndexCss.inp}>\r\n                    <div className={IndexCss.boxAdd}>\r\n                        <span>运单号/箱号</span><div><InputItem autoFocus=\"autofocus\" value={this.state.boxAdd} onChange={(v) => {\r\n                            this.setState({\r\n                                boxAdd: v\r\n                            })\r\n                        }} onKeyDown={this.hendleChangeGoaut} /></div>\r\n                    </div>\r\n                    {this.state.special && <div className={IndexCss.rvomadd}><span>清关号</span><div><InputItem value={this.state.closeAdd} onChange={(v) => {\r\n                        this.setState({\r\n                            closeAdd: v\r\n                        })\r\n                    }}\r\n                        onKeyDown={this.handleRvomAdd}\r\n                        ref=\"rvomadd\"\r\n                    />\r\n                    </div> </div>\r\n                    }\r\n                    {this.state.checkList[0].check &&\r\n                        <div className={IndexCss.update}>\r\n                            <div>\r\n                                <span className={this.state.forbidden === false ? IndexCss.input : ''}>重量</span>\r\n                                <div>\r\n                                    <InputItem\r\n                                        className={this.state.forbidden === false ? IndexCss.input : ''}\r\n                                        onChange={(v) => {\r\n                                            this.setState({\r\n                                                weight: v\r\n                                            })\r\n                                        }}\r\n                                        editable={this.state.forbidden}\r\n                                        onKeyDown={this.handleKeyWeight}\r\n                                        ref=\"weight\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {this.state.checkList[0].check && <div className={IndexCss.Divthree}>\r\n                        <div className={IndexCss.length}><InputItem\r\n                            className={this.state.forbiddenCWG === false ? IndexCss.input : ''}\r\n                            type=\"digit\" placeholder=\"长\" ref=\"length\" onChange={(v) => {\r\n                                this.setState({\r\n                                    lenghtCM: v\r\n                                })\r\n                            }}\r\n                            editable={this.state.forbiddenCWG}\r\n                            onKeyDown={this.keyDownLength}\r\n                        /></div>\r\n                        <div className={IndexCss.length}><InputItem\r\n                            className={this.state.forbiddenCWG === false ? IndexCss.input : ''}\r\n                            placeholder=\"宽\" ref=\"width\" onChange={(v) => {\r\n                                this.setState({\r\n                                    widthCM: v\r\n                                })\r\n                            }}\r\n                            editable={this.state.forbiddenCWG}\r\n                            onKeyDown={this.keyDownWidth}\r\n                        /></div>\r\n                        <div className={IndexCss.length}><InputItem\r\n                            className={this.state.forbiddenCWG === false ? IndexCss.input : ''}\r\n                            placeholder=\"高\" ref=\"tall\" onChange={(v) => {\r\n                                this.setState({\r\n                                    tallCM: v\r\n                                })\r\n                            }}\r\n                            editable={this.state.forbiddenCWG}\r\n                            onKeyDown={this.keyDownTall}\r\n                        /></div>\r\n                    </div>}\r\n                    {this.state.checkList.map((v, i) => {\r\n                        this.state.checkList[1].name = `${this.state.checkList[0].check ? '不使用清关号' : '更新请关号'}`\r\n                        return <div key={i} className={IndexCss.checkMap}>\r\n                            <Checkbox onChange={() => ((i) => {\r\n                                this.handleCheckList(i)\r\n                            })(i)}\r\n                                checked={!v.check}\r\n                            >\r\n                                {v.name}\r\n                            </Checkbox>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pickup;"]},"metadata":{},"sourceType":"module"}