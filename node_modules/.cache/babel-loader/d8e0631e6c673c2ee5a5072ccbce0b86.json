{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ParcelOS\\\\Desktop\\\\kaifa\\\\parceic\\\\src\\\\page\\\\mpage\\\\indexRouter\\\\pickup.js\";\n// 大货拣货\nimport React from 'react'; // 引入输入框组件     使用ant design mobile的ui库\n\nimport { InputItem } from 'antd-mobile'; // 引入标题导航组件\n\nimport Navs from '../../../componets/nav'; // 引入input组件\n// import Inp from '../../../componets/input'\n// 引入样式文件\n\nimport IndexCss from './css/pickup.module.scss'; // 引入复选框组件\n\nimport { List, Checkbox, Flex } from 'antd-mobile';\n\nclass Pickup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boxAdd: \"\",\n      closeAdd: \"\",\n      weight: \"\",\n      lenghtCM: \"\",\n      widthCM: \"\",\n      tallCM: \"\",\n      special: true,\n      checkList: [{\n        name: \"更新模式\",\n        check: true\n      }, {\n        name: '',\n        check: true\n      }, {\n        name: \"锁定重量\",\n        check: true\n      }, {\n        name: \"锁定尺寸\",\n        check: true\n      }, {\n        name: \"使用客户数据\",\n        check: true\n      }]\n    };\n\n    this.hendleChangeGoaut = v => {\n      // console.log(v.keyCode);\n      // 里面做一层判断  确认用户点击回车键后进此判断\n      if (v.keyCode === 13) {\n        // 里面判断用户是否使用清单号模式   如果使用了清单号模式进入if判断\n        console.log(this.refs.rvomadd);\n\n        if (this.refs.rvomadd) {\n          // 利用ref查找到清单号的输入框\n          let rvomadd = this.refs.rvomadd; // 为其获取焦点\n\n          rvomadd.focus();\n        } else {\n          // 如果以上的if条件没有满足证明用户没有使用到清单模式\n          // 则需要直接跳到重量模式\n          let weight = this.refs.weight; // 并为其重量模式添加focus\n\n          weight.focus();\n        }\n      }\n    };\n\n    this.handleRvomAdd = v => {\n      // 里面做出一层判断是否点击了回车键\n      if (v.keyCode === 13) {\n        // 如果点击了回车键则进入if判断\n        let weight = this.refs.weight; // 并未下一个输入框获取焦点\n\n        weight.focus();\n      }\n    };\n\n    this.handleKeyWeight = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框   \n        let length = this.refs.length; // 添加focus事件     自动获取焦点\n\n        length.focus();\n      }\n    };\n\n    this.keyDownLength = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框\n        let width = this.refs.width; // 添加focus事件     自动获取焦点\n\n        width.focus();\n      }\n    };\n\n    this.keyDownWidth = v => {\n      // 判断键盘事件是否点击的是回车键    如果是就进入if判断\n      if (v.keyCode === 13) {\n        // 通过ref 找点下一个input输入框\n        let tall = this.refs.tall; // 添加focus事件     自动获取焦点\n\n        tall.focus();\n      }\n    };\n\n    this.keyDownTall = () => {};\n\n    this.handleCheckList = i => {\n      // render函数上面循环了六个check选择模式     所以采取 i 来找到相应的对象\n      // 创建一个变量拿到checkList数组   并未其进行改造\n      let {\n        checkList,\n        special\n      } = this.state; // 通过索引来取到他的值    并为check取反\n\n      checkList[i].check = !checkList[i].check;\n\n      if (i === 1) {\n        if (checkList[0].check === checkList[i].check) {\n          special = true;\n        }\n      } else if (i === 0 || i === 1) {\n        special = checkList[i].check;\n      } else if (i === 0) {\n        checkList[1].check = true;\n      } // 把改造过的值赋值回去\n\n\n      this.setState({\n        checkList,\n        special\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Navs, {\n      name: \"\\u62E3\\u8D27\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: IndexCss.inp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: IndexCss.boxAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\u8FD0\\u5355\\u53F7/\\u7BB1\\u53F7\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      autoFocus: \"autofocus\",\n      value: this.state.boxAdd,\n      onChange: v => {\n        this.setState({\n          boxAdd: v\n        });\n      },\n      onKeyDown: this.hendleChangeGoaut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), this.state.special && React.createElement(\"div\", {\n      className: IndexCss.rvomadd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"\\u6E05\\u5173\\u53F7\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      value: this.state.closeAdd,\n      onChange: v => {\n        this.setState({\n          closeAdd: v\n        });\n      },\n      onKeyDown: this.handleRvomAdd,\n      ref: \"rvomadd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), \" \"), this.state.checkList[0].check && React.createElement(\"div\", {\n      className: IndexCss.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"\\u91CD\\u91CF\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      onChange: v => {\n        this.setState({\n          weight: v\n        });\n      },\n      onKeyDown: this.handleKeyWeight,\n      ref: \"weight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })))), this.state.checkList[0].check && React.createElement(\"div\", {\n      className: IndexCss.Divthree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      placeholder: \"\\u957F\",\n      ref: \"length\",\n      onChange: v => {\n        this.setState({\n          lenghtCM: v\n        });\n      },\n      onKeyDown: this.keyDownLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      placeholder: \"\\u5BBD\",\n      ref: \"width\",\n      onChange: v => {\n        this.setState({\n          widthCM: v\n        });\n      },\n      onKeyDown: this.keyDownWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: IndexCss.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(InputItem, {\n      placeholder: \"\\u9AD8\",\n      ref: \"tall\",\n      onChange: v => {\n        this.setState({\n          tallCM: v\n        });\n      },\n      onKeyDown: this.keyDownTall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }))), this.state.checkList.map((v, i) => {\n      this.state.checkList[1].name = `${this.state.checkList[0].check ? '不使用清关号' : '更新请关号'}`;\n      return React.createElement(\"div\", {\n        key: i,\n        className: IndexCss.checkMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: () => (i => {\n          this.handleCheckList(i);\n        })(i),\n        checked: !v.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, v.name));\n    })));\n  }\n\n}\n\nexport default Pickup;","map":{"version":3,"sources":["C:/Users/ParcelOS/Desktop/kaifa/parceic/src/page/mpage/indexRouter/pickup.js"],"names":["React","InputItem","Navs","IndexCss","List","Checkbox","Flex","Pickup","Component","state","boxAdd","closeAdd","weight","lenghtCM","widthCM","tallCM","special","checkList","name","check","hendleChangeGoaut","v","keyCode","console","log","refs","rvomadd","focus","handleRvomAdd","handleKeyWeight","length","keyDownLength","width","keyDownWidth","tall","keyDownTall","handleCheckList","i","setState","render","inp","update","Divthree","map","checkMap"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,QAAqC,aAArC;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,OAAO,EAAE,EALL;AAMJC,MAAAA,MAAM,EAAE,EANJ;AAOJC,MAAAA,OAAO,EAAE,IAPL;AAQJC,MAAAA,SAAS,EAAE,CACP;AACIC,QAAAA,IAAI,EAAE,MADV;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADO,EAIJ;AACCD,QAAAA,IAAI,EAAE,EADP;AAECC,QAAAA,KAAK,EAAE;AAFR,OAJI,EAOJ;AACCD,QAAAA,IAAI,EAAE,MADP;AAECC,QAAAA,KAAK,EAAE;AAFR,OAPI,EAUJ;AACCD,QAAAA,IAAI,EAAE,MADP;AAECC,QAAAA,KAAK,EAAE;AAFR,OAVI,EAaJ;AACCD,QAAAA,IAAI,EAAE,QADP;AAECC,QAAAA,KAAK,EAAE;AAFR,OAbI;AARP,KADyB;;AAAA,SA+BjCC,iBA/BiC,GA+BZC,CAAD,IAAO;AACvB;AACA;AACA,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUC,OAAtB;;AACA,YAAI,KAAKD,IAAL,CAAUC,OAAd,EAAuB;AACnB;AACA,cAAIA,OAAO,GAAG,KAAKD,IAAL,CAAUC,OAAxB,CAFmB,CAGnB;;AACAA,UAAAA,OAAO,CAACC,KAAR;AACH,SALD,MAKO;AACH;AACA;AACA,cAAIf,MAAM,GAAG,KAAKa,IAAL,CAAUb,MAAvB,CAHG,CAIH;;AACAA,UAAAA,MAAM,CAACe,KAAP;AAEH;AACJ;AAEJ,KApDgC;;AAAA,SAuDjCC,aAvDiC,GAuDhBP,CAAD,IAAO;AACnB;AACA,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClB;AACA,YAAIV,MAAM,GAAG,KAAKa,IAAL,CAAUb,MAAvB,CAFkB,CAGlB;;AACAA,QAAAA,MAAM,CAACe,KAAP;AACH;AACJ,KA/DgC;;AAAA,SAkEjCE,eAlEiC,GAkEdR,CAAD,IAAO;AAErB;AACA,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClB;AACA,YAAIQ,MAAM,GAAG,KAAKL,IAAL,CAAUK,MAAvB,CAFkB,CAGlB;;AACAA,QAAAA,MAAM,CAACH,KAAP;AACH;AACJ,KA3EgC;;AAAA,SA8EjCI,aA9EiC,GA8EhBV,CAAD,IAAO;AACnB;AACA,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClB;AACA,YAAIU,KAAK,GAAG,KAAKP,IAAL,CAAUO,KAAtB,CAFkB,CAGlB;;AACAA,QAAAA,KAAK,CAACL,KAAN;AACH;AACJ,KAtFgC;;AAAA,SAyFjCM,YAzFiC,GAyFjBZ,CAAD,IAAO;AAClB;AACA,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClB;AACA,YAAIY,IAAI,GAAG,KAAKT,IAAL,CAAUS,IAArB,CAFkB,CAGlB;;AACAA,QAAAA,IAAI,CAACP,KAAL;AACH;AACJ,KAjGgC;;AAAA,SAmGjCQ,WAnGiC,GAmGnB,MAAM,CAEnB,CArGgC;;AAAA,SAyGjCC,eAzGiC,GAyGdC,CAAD,IAAO;AACrB;AACA;AACA,UAAI;AAAEpB,QAAAA,SAAF;AAAaD,QAAAA;AAAb,UAAyB,KAAKP,KAAlC,CAHqB,CAIrB;;AACAQ,MAAAA,SAAS,CAACoB,CAAD,CAAT,CAAalB,KAAb,GAAqB,CAACF,SAAS,CAACoB,CAAD,CAAT,CAAalB,KAAnC;;AACA,UAAIkB,CAAC,KAAK,CAAV,EAAa;AACT,YAAIpB,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,KAAuBF,SAAS,CAACoB,CAAD,CAAT,CAAalB,KAAxC,EAA+C;AAC3CH,UAAAA,OAAO,GAAG,IAAV;AACH;AACJ,OAJD,MAIO,IAAIqB,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAArB,EAAwB;AAC3BrB,QAAAA,OAAO,GAAGC,SAAS,CAACoB,CAAD,CAAT,CAAalB,KAAvB;AACH,OAFM,MAEA,IAAIkB,CAAC,KAAK,CAAV,EAAa;AAChBpB,QAAAA,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,GAAqB,IAArB;AACH,OAdoB,CAerB;;;AACA,WAAKmB,QAAL,CAAc;AACVrB,QAAAA,SADU;AAEVD,QAAAA;AAFU,OAAd;AAMH,KA/HgC;AAAA;;AAoIjCuB,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAEpC,QAAQ,CAACqC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAErC,QAAQ,CAACO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,EACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,MAAnD;AAA2D,MAAA,QAAQ,EAAGW,CAAD,IAAO;AAChG,aAAKiB,QAAL,CAAc;AACV5B,UAAAA,MAAM,EAAEW;AADE,SAAd;AAGH,OAJuB;AAIrB,MAAA,SAAS,EAAE,KAAKD,iBAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADvB,CADJ,EAQK,KAAKX,KAAL,CAAWO,OAAX,IAAsB;AAAK,MAAA,SAAS,EAAEb,QAAQ,CAACuB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAlC,EAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,QAA7B;AAAuC,MAAA,QAAQ,EAAGU,CAAD,IAAO;AAClI,aAAKiB,QAAL,CAAc;AACV3B,UAAAA,QAAQ,EAAEU;AADA,SAAd;AAGH,OAJ6E;AAK1E,MAAA,SAAS,EAAE,KAAKO,aAL0D;AAM1E,MAAA,GAAG,EAAC,SANsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAAlD,MAR3B,EAkBK,KAAKnB,KAAL,CAAWQ,SAAX,CAAqB,CAArB,EAAwBE,KAAxB,IACG;AAAK,MAAA,SAAS,EAAEhB,QAAQ,CAACsC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACX,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAGpB,CAAD,IAAO;AACxB,aAAKiB,QAAL,CAAc;AACV1B,UAAAA,MAAM,EAAES;AADE,SAAd;AAGH,OAJD;AAKI,MAAA,SAAS,EAAE,KAAKQ,eALpB;AAMI,MAAA,GAAG,EAAC,QANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,CADnB,CADJ,CAnBR,EAmCK,KAAKpB,KAAL,CAAWQ,SAAX,CAAqB,CAArB,EAAwBE,KAAxB,IAAiC;AAAK,MAAA,SAAS,EAAEhB,QAAQ,CAACuC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC9B;AAAK,MAAA,SAAS,EAAEvC,QAAQ,CAAC2B,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,QAAvB;AAA2B,MAAA,GAAG,EAAC,QAA/B;AAAwC,MAAA,QAAQ,EAAGT,CAAD,IAAO;AACtF,aAAKiB,QAAL,CAAc;AACVzB,UAAAA,QAAQ,EAAEQ;AADA,SAAd;AAGH,OAJgC;AAK7B,MAAA,SAAS,EAAE,KAAKU,aALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CAD8B,EAQ9B;AAAK,MAAA,SAAS,EAAE5B,QAAQ,CAAC2B,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,QAAvB;AAA2B,MAAA,GAAG,EAAC,OAA/B;AAAuC,MAAA,QAAQ,EAAGT,CAAD,IAAO;AACrF,aAAKiB,QAAL,CAAc;AACVxB,UAAAA,OAAO,EAAEO;AADC,SAAd;AAGH,OAJgC;AAK7B,MAAA,SAAS,EAAE,KAAKY,YALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CAR8B,EAe9B;AAAK,MAAA,SAAS,EAAE9B,QAAQ,CAAC2B,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,QAAvB;AAA2B,MAAA,GAAG,EAAC,MAA/B;AAAsC,MAAA,QAAQ,EAAGT,CAAD,IAAO;AACpF,aAAKiB,QAAL,CAAc;AACVvB,UAAAA,MAAM,EAAEM;AADE,SAAd;AAGH,OAJgC;AAK7B,MAAA,SAAS,EAAE,KAAKc,WALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CAf8B,CAnCtC,EA0DK,KAAK1B,KAAL,CAAWQ,SAAX,CAAqB0B,GAArB,CAAyB,CAACtB,CAAD,EAAIgB,CAAJ,KAAU;AAChC,WAAK5B,KAAL,CAAWQ,SAAX,CAAqB,CAArB,EAAwBC,IAAxB,GAAgC,GAAE,KAAKT,KAAL,CAAWQ,SAAX,CAAqB,CAArB,EAAwBE,KAAxB,GAAgC,QAAhC,GAA2C,OAAQ,EAArF;AACA,aAAO;AAAK,QAAA,GAAG,EAAEkB,CAAV;AAAa,QAAA,SAAS,EAAElC,QAAQ,CAACyC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,MAAM,CAAEP,CAAD,IAAO;AAC9B,eAAKD,eAAL,CAAqBC,CAArB;AACH,SAFyB,EAEvBA,CAFuB,CAA1B;AAGI,QAAA,OAAO,EAAE,CAAChB,CAAC,CAACF,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKE,CAAC,CAACH,IALP,CADG,CAAP;AASH,KAXA,CA1DL,CAFJ,CADJ;AA6EH;;AAnNgC;;AAsNrC,eAAeX,MAAf","sourcesContent":["// 大货拣货\r\n\r\nimport React from 'react'\r\n\r\n// 引入输入框组件     使用ant design mobile的ui库\r\nimport { InputItem } from 'antd-mobile';\r\n\r\n// 引入标题导航组件\r\nimport Navs from '../../../componets/nav'\r\n// 引入input组件\r\n// import Inp from '../../../componets/input'\r\n// 引入样式文件\r\nimport IndexCss from './css/pickup.module.scss'\r\n\r\n// 引入复选框组件\r\nimport { List, Checkbox, Flex } from 'antd-mobile';\r\n\r\nclass Pickup extends React.Component {\r\n    state = {\r\n        boxAdd: \"\",\r\n        closeAdd: \"\",\r\n        weight: \"\",\r\n        lenghtCM: \"\",\r\n        widthCM: \"\",\r\n        tallCM: \"\",\r\n        special: true,\r\n        checkList: [\r\n            {\r\n                name: \"更新模式\",\r\n                check: true\r\n            }, {\r\n                name: '',\r\n                check: true\r\n            }, {\r\n                name: \"锁定重量\",\r\n                check: true\r\n            }, {\r\n                name: \"锁定尺寸\",\r\n                check: true\r\n            }, {\r\n                name: \"使用客户数据\",\r\n                check: true\r\n            }\r\n        ]\r\n    }\r\n    // -------------------------------------------------------------------\r\n\r\n    // 点击在输入框在运单号的时候触发此函数\r\n    hendleChangeGoaut = (v) => {\r\n        // console.log(v.keyCode);\r\n        // 里面做一层判断  确认用户点击回车键后进此判断\r\n        if (v.keyCode === 13) {\r\n            // 里面判断用户是否使用清单号模式   如果使用了清单号模式进入if判断\r\n            console.log(this.refs.rvomadd);\r\n            if (this.refs.rvomadd) {\r\n                // 利用ref查找到清单号的输入框\r\n                let rvomadd = this.refs.rvomadd\r\n                // 为其获取焦点\r\n                rvomadd.focus()\r\n            } else {\r\n                // 如果以上的if条件没有满足证明用户没有使用到清单模式\r\n                // 则需要直接跳到重量模式\r\n                let weight = this.refs.weight\r\n                // 并为其重量模式添加focus\r\n                weight.focus()\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // 下面是清单输入框的键盘点击事件\r\n    handleRvomAdd = (v) => {\r\n        // 里面做出一层判断是否点击了回车键\r\n        if (v.keyCode === 13) {\r\n            // 如果点击了回车键则进入if判断\r\n            let weight = this.refs.weight\r\n            // 并未下一个输入框获取焦点\r\n            weight.focus()\r\n        }\r\n    }\r\n\r\n    // 下面是重量输入框的键盘事件函数\r\n    handleKeyWeight = (v) => {\r\n\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框   \r\n            let length = this.refs.length\r\n            // 添加focus事件     自动获取焦点\r\n            length.focus()\r\n        }\r\n    }\r\n\r\n    // 下面是长输入框的键盘事件函数\r\n    keyDownLength = (v) => {\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框\r\n            let width = this.refs.width\r\n            // 添加focus事件     自动获取焦点\r\n            width.focus()\r\n        }\r\n    }\r\n\r\n    // 下面是宽输入框的键盘事件函数\r\n    keyDownWidth = (v) => {\r\n        // 判断键盘事件是否点击的是回车键    如果是就进入if判断\r\n        if (v.keyCode === 13) {\r\n            // 通过ref 找点下一个input输入框\r\n            let tall = this.refs.tall\r\n            // 添加focus事件     自动获取焦点\r\n            tall.focus()\r\n        }\r\n    }\r\n\r\n    keyDownTall = () => {\r\n\r\n    }\r\n\r\n\r\n    // 点击handleCheckList触发的函数\r\n    handleCheckList = (i) => {\r\n        // render函数上面循环了六个check选择模式     所以采取 i 来找到相应的对象\r\n        // 创建一个变量拿到checkList数组   并未其进行改造\r\n        let { checkList, special } = this.state\r\n        // 通过索引来取到他的值    并为check取反\r\n        checkList[i].check = !checkList[i].check\r\n        if (i === 1) {\r\n            if (checkList[0].check === checkList[i].check) {\r\n                special = true\r\n            }\r\n        } else if (i === 0 || i === 1) {\r\n            special = checkList[i].check\r\n        } else if (i === 0) {\r\n            checkList[1].check = true\r\n        }\r\n        // 把改造过的值赋值回去\r\n        this.setState({\r\n            checkList,\r\n            special\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Navs name=\"拣货\" />\r\n                <div className={IndexCss.inp}>\r\n                    <div className={IndexCss.boxAdd}>\r\n                        <span>运单号/箱号</span><div><InputItem autoFocus=\"autofocus\" value={this.state.boxAdd} onChange={(v) => {\r\n                            this.setState({\r\n                                boxAdd: v\r\n                            })\r\n                        }} onKeyDown={this.hendleChangeGoaut} /></div>\r\n                    </div>\r\n                    {this.state.special && <div className={IndexCss.rvomadd}><span>清关号</span><div><InputItem value={this.state.closeAdd} onChange={(v) => {\r\n                        this.setState({\r\n                            closeAdd: v\r\n                        })\r\n                    }}\r\n                        onKeyDown={this.handleRvomAdd}\r\n                        ref=\"rvomadd\"\r\n                    />\r\n                    </div> </div>\r\n                    }\r\n                    {this.state.checkList[0].check &&\r\n                        <div className={IndexCss.update}>\r\n                            <div>\r\n                                <span>重量</span><div>\r\n                                    <InputItem onChange={(v) => {\r\n                                        this.setState({\r\n                                            weight: v\r\n                                        })\r\n                                    }}\r\n                                        onKeyDown={this.handleKeyWeight}\r\n                                        ref=\"weight\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {this.state.checkList[0].check && <div className={IndexCss.Divthree}>\r\n                        <div className={IndexCss.length}><InputItem placeholder=\"长\" ref=\"length\" onChange={(v) => {\r\n                            this.setState({\r\n                                lenghtCM: v\r\n                            })\r\n                        }}\r\n                            onKeyDown={this.keyDownLength}\r\n                        /></div>\r\n                        <div className={IndexCss.length}><InputItem placeholder=\"宽\" ref=\"width\" onChange={(v) => {\r\n                            this.setState({\r\n                                widthCM: v\r\n                            })\r\n                        }}\r\n                            onKeyDown={this.keyDownWidth}\r\n                        /></div>\r\n                        <div className={IndexCss.length}><InputItem placeholder=\"高\" ref=\"tall\" onChange={(v) => {\r\n                            this.setState({\r\n                                tallCM: v\r\n                            })\r\n                        }}\r\n                            onKeyDown={this.keyDownTall}\r\n                        /></div>\r\n                    </div>}\r\n                    {this.state.checkList.map((v, i) => {\r\n                        this.state.checkList[1].name = `${this.state.checkList[0].check ? '不使用清关号' : '更新请关号'}`\r\n                        return <div key={i} className={IndexCss.checkMap}>\r\n                            <Checkbox onChange={() => ((i) => {\r\n                                this.handleCheckList(i)\r\n                            })(i)}\r\n                                checked={!v.check}\r\n                            >\r\n                                {v.name}\r\n                            </Checkbox>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pickup;"]},"metadata":{},"sourceType":"module"}